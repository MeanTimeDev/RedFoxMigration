{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RedFoxMigrated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkTokenBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "getAccountReference",
				"outputs": [
					{
						"internalType": "bytes20",
						"name": "",
						"type": "bytes20"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ethAddress",
						"type": "address"
					}
				],
				"name": "getEthAccountAvailable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ethAddress",
						"type": "address"
					}
				],
				"name": "getEthAccountBalances",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "getEthereumAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "account",
						"type": "bytes20"
					}
				],
				"name": "getRAccountAvailable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "rAddress",
						"type": "bytes20"
					}
				],
				"name": "getRAccountBalances",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ethAddress",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setEthAccountBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "account",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "blockHeight",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "paid",
										"type": "bool"
									}
								],
								"internalType": "struct RedFoxMigration.TimedBalance[]",
								"name": "balances",
								"type": "tuple[]"
							}
						],
						"internalType": "struct RedFoxMigration.SetEthBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setEthAccountBalances",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "account",
						"type": "bytes20"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setRAccountBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes20",
								"name": "account",
								"type": "bytes20"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "blockHeight",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "paid",
										"type": "bool"
									}
								],
								"internalType": "struct RedFoxMigration.TimedBalance[]",
								"name": "balances",
								"type": "tuple[]"
							}
						],
						"internalType": "struct RedFoxMigration.SetRBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setRAccountBalances",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					}
				],
				"name": "setTokenContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "withdrawBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/RedFoxMigration.sol": "RedFoxMigration"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/RedFoxMigration.sol": {
			"keccak256": "0x2b2ddf2b0d01d0470de008bd671a2e68ad31a7f8052701b667ac1ff2871b7aea",
			"urls": [
				"bzz-raw://66727b7b3d112d45eb58786ad5b26525ce465cc12ba36a414e63e85388ecea5f",
				"dweb:/ipfs/QmdTp1izn9V7EAsop4tfKZ2RcJugAkZ75WNzsRaMTipsk9"
			]
		},
		"localhost/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol": {
			"keccak256": "0x9115ba372645f987970e86a46d49923e39be239222dcd45e6149097fd78a410c",
			"urls": [
				"bzz-raw://030b7c52b8e7167507a963d62f7424ecb599b86b150b3cab8865a28ebc72a029",
				"dweb:/ipfs/QmPxHhgBHf4TLt9Uk5FPAp2uaxwUApfBZJS3TSKSYJ8DsG"
			]
		},
		"localhost/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol": {
			"keccak256": "0x55bfb7c9952cd96173a12832726a54bb7f0eced0baaec6c9a19e421429062644",
			"urls": [
				"bzz-raw://5645dcceaabd7c86a7571913861085278f37854cbf7eaf5a0bbb968bbf13c94d",
				"dweb:/ipfs/QmRCFtcEsRiEvBTbZtnuQ7nJnPdfhvt28XKhtaeaJngWQN"
			]
		},
		"localhost/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
			"keccak256": "0xb88df951d99fbad1686f69a526dd1520ee3c29cd593f4e60d2f13946fbc16a08",
			"urls": [
				"bzz-raw://21359d489c684afd1ab0091edfa91785f9eb4554a462872c9ebb051b3893c1e9",
				"dweb:/ipfs/QmQGYaQC2NxfQCnKFSzDrBbDvBXEq9iYU6DfVxfG9X2mSN"
			]
		},
		"localhost/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xe202946b728d83653ff0b4f5c1f0c840e06377f0949f86cdbd82f975a877f908",
			"urls": [
				"bzz-raw://572ac5567826ce4e7a1ab671c2f879ecdc345b124acd6286035a8efaec533777",
				"dweb:/ipfs/QmeU5bEMfvF4tsrRUTVUXezGhihGpHQPc7zdo7VjvtcxHD"
			]
		},
		"localhost/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xd2fb4866c3fa8015592d2dcc981bcbdd3d07ac00608ed01c20bd4ad2e87c231e",
			"urls": [
				"bzz-raw://c19086027da5df589e2b7665348100c335e8a43618ca0b6b40732972c173a01d",
				"dweb:/ipfs/QmPwxSeXjZcWP68ssBEj9FEbPfqHrxsTAaHWhxAVf76iKR"
			]
		}
	},
	"version": 1
}