{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token.InitialAllocations[]",
          "name": "_initialAllocations",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Token.InitialAllocations[]\",\"name\":\"_initialAllocations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/james/Development/redfox/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/james/Development/redfox/contracts/Token.sol\":{\"keccak256\":\"0xfbe2af9172070a600bc47218b22442738420372e603fc8038c5821edb46160ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9aaeb2271adde888b2a412814846c564f84f9ffa78dece3fa101ab00ccda11\",\"dweb:/ipfs/QmQHLhcDo1LKAq3Hs5JH6fJxDh4WDBENHKb3r5dqFX24e4\"]},\"/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200199038038062001990833981810160405281019062000037919062000518565b6040518060400160405280600481526020017f52464f58000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f52464f58000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000364565b508060049080519060200190620000d492919062000364565b506012600560006101000a81548160ff021916908360ff160217905550505060005b81518110156200015057620001428282815181106200011157fe5b6020026020010151600001518383815181106200012a57fe5b6020026020010151602001516200015860201b60201c565b8080600101915050620000f6565b50506200072d565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c29062000614565b60405180910390fd5b620001df600083836200030760201b60201c565b620001fb816002546200030c60201b6200073f1790919060201c565b60028190555062000259816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200030c60201b6200073f1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002fb919062000636565b60405180910390a35050565b505050565b6000808284019050838110156200035a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200035190620005f2565b60405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a757805160ff1916838001178555620003d8565b82800160010185558215620003d8579182015b82811115620003d7578251825591602001919060010190620003ba565b5b509050620003e79190620003eb565b5090565b5b8082111562000406576000816000905550600101620003ec565b5090565b6000815190506200041b81620006f9565b92915050565b600082601f8301126200043357600080fd5b81516200044a620004448262000681565b62000653565b915081818352602084019350602081019050838560408402820111156200047057600080fd5b60005b83811015620004a45781620004898882620004ae565b84526020840193506040830192505060018101905062000473565b5050505092915050565b600060408284031215620004c157600080fd5b620004cd604062000653565b90506000620004df848285016200040a565b6000830152506020620004f58482850162000501565b60208301525092915050565b600081519050620005128162000713565b92915050565b6000602082840312156200052b57600080fd5b600082015167ffffffffffffffff8111156200054657600080fd5b620005548482850162000421565b91505092915050565b60006200056c601b83620006aa565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000620005ae601f83620006aa565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620005ec81620006ef565b82525050565b600060208201905081810360008301526200060d816200055d565b9050919050565b600060208201905081810360008301526200062f816200059f565b9050919050565b60006020820190506200064d6000830184620005e1565b92915050565b6000604051905081810181811067ffffffffffffffff821117156200067757600080fd5b8060405250919050565b600067ffffffffffffffff8211156200069957600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b6000620006c882620006cf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200070481620006bb565b81146200071057600080fd5b50565b6200071e81620006ef565b81146200072a57600080fd5b50565b611253806200073d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610fcf565b60405180910390f35b6100e660048036038101906100e19190610d3a565b610318565b6040516100f39190610fb4565b60405180910390f35b610104610336565b6040516101119190611091565b60405180910390f35b610134600480360381019061012f9190610ceb565b610340565b6040516101419190610fb4565b60405180910390f35b610152610419565b60405161015f91906110ac565b60405180910390f35b610182600480360381019061017d9190610d3a565b610430565b60405161018f9190610fb4565b60405180910390f35b6101b260048036038101906101ad9190610c86565b6104e3565b6040516101bf9190611091565b60405180910390f35b6101d061052b565b6040516101dd9190610fcf565b60405180910390f35b61020060048036038101906101fb9190610d3a565b6105cd565b60405161020d9190610fb4565b60405180910390f35b610230600480360381019061022b9190610d3a565b61069a565b60405161023d9190610fb4565b60405180910390f35b610260600480360381019061025b9190610caf565b6106b8565b60405161026d9190611091565b60405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b600061032c610325610794565b848461079c565b6001905092915050565b6000600254905090565b600061034d848484610967565b61040e84610359610794565b610409856040518060600160405280602881526020016111d160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103bf610794565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bfc9092919063ffffffff16565b61079c565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006104d961043d610794565b846104d4856001600061044e610794565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073f90919063ffffffff16565b61079c565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b5050505050905090565b60006106906105da610794565b8461068b856040518060600160405280602581526020016111f96025913960016000610604610794565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bfc9092919063ffffffff16565b61079c565b6001905092915050565b60006106ae6106a7610794565b8484610967565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008082840190508381101561078a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078190611031565b60405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080390611071565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087390611011565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161095a9190611091565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce90611051565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e90610ff1565b60405180910390fd5b610a52838383610c57565b610abd816040518060600160405280602681526020016111ab602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bfc9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b50816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bef9190611091565b60405180910390a3505050565b6000838311158290610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b9190610fcf565b60405180910390fd5b5060008385039050809150509392505050565b505050565b600081359050610c6b8161117c565b92915050565b600081359050610c8081611193565b92915050565b600060208284031215610c9857600080fd5b6000610ca684828501610c5c565b91505092915050565b60008060408385031215610cc257600080fd5b6000610cd085828601610c5c565b9250506020610ce185828601610c5c565b9150509250929050565b600080600060608486031215610d0057600080fd5b6000610d0e86828701610c5c565b9350506020610d1f86828701610c5c565b9250506040610d3086828701610c71565b9150509250925092565b60008060408385031215610d4d57600080fd5b6000610d5b85828601610c5c565b9250506020610d6c85828601610c71565b9150509250929050565b610d7f816110f5565b82525050565b6000610d90826110c7565b610d9a81856110d2565b9350610daa818560208601611138565b610db38161116b565b840191505092915050565b6000610dcb6023836110d2565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e316022836110d2565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e97601b836110d2565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000610ed76025836110d2565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f3d6024836110d2565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610f9f81611121565b82525050565b610fae8161112b565b82525050565b6000602082019050610fc96000830184610d76565b92915050565b60006020820190508181036000830152610fe98184610d85565b905092915050565b6000602082019050818103600083015261100a81610dbe565b9050919050565b6000602082019050818103600083015261102a81610e24565b9050919050565b6000602082019050818103600083015261104a81610e8a565b9050919050565b6000602082019050818103600083015261106a81610eca565b9050919050565b6000602082019050818103600083015261108a81610f30565b9050919050565b60006020820190506110a66000830184610f96565b92915050565b60006020820190506110c16000830184610fa5565b92915050565b600081519050919050565b600082825260208201905092915050565b60006110ee82611101565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561115657808201518184015260208101905061113b565b83811115611165576000848401525b50505050565b6000601f19601f8301169050919050565b611185816110e3565b811461119057600080fd5b50565b61119c81611121565b81146111a757600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122034a537038cf06b4c64920966d0dd16c5853f7070572fbe850caf11977f8e36d164736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610fcf565b60405180910390f35b6100e660048036038101906100e19190610d3a565b610318565b6040516100f39190610fb4565b60405180910390f35b610104610336565b6040516101119190611091565b60405180910390f35b610134600480360381019061012f9190610ceb565b610340565b6040516101419190610fb4565b60405180910390f35b610152610419565b60405161015f91906110ac565b60405180910390f35b610182600480360381019061017d9190610d3a565b610430565b60405161018f9190610fb4565b60405180910390f35b6101b260048036038101906101ad9190610c86565b6104e3565b6040516101bf9190611091565b60405180910390f35b6101d061052b565b6040516101dd9190610fcf565b60405180910390f35b61020060048036038101906101fb9190610d3a565b6105cd565b60405161020d9190610fb4565b60405180910390f35b610230600480360381019061022b9190610d3a565b61069a565b60405161023d9190610fb4565b60405180910390f35b610260600480360381019061025b9190610caf565b6106b8565b60405161026d9190611091565b60405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b600061032c610325610794565b848461079c565b6001905092915050565b6000600254905090565b600061034d848484610967565b61040e84610359610794565b610409856040518060600160405280602881526020016111d160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103bf610794565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bfc9092919063ffffffff16565b61079c565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006104d961043d610794565b846104d4856001600061044e610794565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073f90919063ffffffff16565b61079c565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b5050505050905090565b60006106906105da610794565b8461068b856040518060600160405280602581526020016111f96025913960016000610604610794565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bfc9092919063ffffffff16565b61079c565b6001905092915050565b60006106ae6106a7610794565b8484610967565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008082840190508381101561078a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078190611031565b60405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080390611071565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087390611011565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161095a9190611091565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce90611051565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e90610ff1565b60405180910390fd5b610a52838383610c57565b610abd816040518060600160405280602681526020016111ab602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bfc9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b50816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bef9190611091565b60405180910390a3505050565b6000838311158290610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b9190610fcf565b60405180910390fd5b5060008385039050809150509392505050565b505050565b600081359050610c6b8161117c565b92915050565b600081359050610c8081611193565b92915050565b600060208284031215610c9857600080fd5b6000610ca684828501610c5c565b91505092915050565b60008060408385031215610cc257600080fd5b6000610cd085828601610c5c565b9250506020610ce185828601610c5c565b9150509250929050565b600080600060608486031215610d0057600080fd5b6000610d0e86828701610c5c565b9350506020610d1f86828701610c5c565b9250506040610d3086828701610c71565b9150509250925092565b60008060408385031215610d4d57600080fd5b6000610d5b85828601610c5c565b9250506020610d6c85828601610c71565b9150509250929050565b610d7f816110f5565b82525050565b6000610d90826110c7565b610d9a81856110d2565b9350610daa818560208601611138565b610db38161116b565b840191505092915050565b6000610dcb6023836110d2565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e316022836110d2565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e97601b836110d2565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000610ed76025836110d2565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f3d6024836110d2565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610f9f81611121565b82525050565b610fae8161112b565b82525050565b6000602082019050610fc96000830184610d76565b92915050565b60006020820190508181036000830152610fe98184610d85565b905092915050565b6000602082019050818103600083015261100a81610dbe565b9050919050565b6000602082019050818103600083015261102a81610e24565b9050919050565b6000602082019050818103600083015261104a81610e8a565b9050919050565b6000602082019050818103600083015261106a81610eca565b9050919050565b6000602082019050818103600083015261108a81610f30565b9050919050565b60006020820190506110a66000830184610f96565b92915050565b60006020820190506110c16000830184610fa5565b92915050565b600081519050919050565b600082825260208201905092915050565b60006110ee82611101565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561115657808201518184015260208101905061113b565b83811115611165576000848401525b50505050565b6000601f19601f8301169050919050565b611185816110e3565b811461119057600080fd5b50565b61119c81611121565b81146111a757600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122034a537038cf06b4c64920966d0dd16c5853f7070572fbe850caf11977f8e36d164736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "166:441:2:-:0;;;285:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2013:141:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:4;2085:5;:12;;;;;;;;;;;;:::i;:::-;;2117:6;2107:7;:16;;;;;;;;;;;;:::i;:::-;;2145:2;2133:9;;:14;;;;;;;;;;;;;;;;;;2013:141;;453:9:2::1;449:149;470:19;:26;468:1;:28;449:149;;;516:67;522:19;542:1;522:22;;;;;;;;;;;;;;:30;;;553:19;573:1;553:22;;;;;;;;;;;;;;:29;;;516:5;;;:67;;:::i;:::-;498:3;;;;;;;449:149;;;;285:319:::0;166:441;;7835:370:6;7937:1;7918:21;;:7;:21;;;;7910:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;;;:49;;:::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;;;;8116:30;8139:6;8116:9;:18;8126:7;8116:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8095:9;:18;8105:7;8095:18;;;;;;;;;;;;;;;:51;;;;8182:7;8161:37;;8178:1;8161:37;;;8191:6;8161:37;;;;;;:::i;:::-;;;;;;;;7835:370;;:::o;10695:92::-;;;;:::o;874:176:5:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;166:441:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;188:827::-;;351:3;344:4;336:6;332:17;328:27;318:2;;369:1;366;359:12;318:2;399:6;393:13;421:115;436:99;528:6;436:99;:::i;:::-;421:115;:::i;:::-;412:124;;553:5;578:6;571:5;564:21;608:4;600:6;596:17;586:27;;630:4;625:3;621:14;614:21;;683:6;730:3;722:4;714:6;710:17;705:3;701:27;698:36;695:2;;;747:1;744;737:12;695:2;772:1;757:252;782:6;779:1;776:13;757:252;;;840:3;862:83;941:3;929:10;862:83;:::i;:::-;857:3;850:96;969:4;964:3;960:14;953:21;;997:4;992:3;988:14;981:21;;814:195;804:1;801;797:9;792:14;;757:252;;;761:14;311:704;;;;;;;:::o;1061:515::-;;1196:4;1184:9;1179:3;1175:19;1171:30;1168:2;;;1214:1;1211;1204:12;1168:2;1232:20;1247:4;1232:20;:::i;:::-;1223:29;;1305:1;1337:60;1393:3;1384:6;1373:9;1369:22;1337:60;:::i;:::-;1330:4;1323:5;1319:16;1312:86;1262:147;1461:2;1494:60;1550:3;1541:6;1530:9;1526:22;1494:60;:::i;:::-;1487:4;1480:5;1476:16;1469:86;1419:147;1162:414;;;;:::o;1583:134::-;;1667:6;1661:13;1652:22;;1679:33;1706:5;1679:33;:::i;:::-;1646:71;;;;:::o;1724:462::-;;1899:2;1887:9;1878:7;1874:23;1870:32;1867:2;;;1915:1;1912;1905:12;1867:2;1971:1;1960:9;1956:17;1950:24;1994:18;1986:6;1983:30;1980:2;;;2026:1;2023;2016:12;1980:2;2046:124;2162:7;2153:6;2142:9;2138:22;2046:124;:::i;:::-;2036:134;;1929:247;1861:325;;;;:::o;2194:327::-;;2354:67;2418:2;2413:3;2354:67;:::i;:::-;2347:74;;2454:29;2450:1;2445:3;2441:11;2434:50;2512:2;2507:3;2503:12;2496:19;;2340:181;;;:::o;2530:331::-;;2690:67;2754:2;2749:3;2690:67;:::i;:::-;2683:74;;2790:33;2786:1;2781:3;2777:11;2770:54;2852:2;2847:3;2843:12;2836:19;;2676:185;;;:::o;2869:113::-;2952:24;2970:5;2952:24;:::i;:::-;2947:3;2940:37;2934:48;;:::o;2989:416::-;;3189:2;3178:9;3174:18;3166:26;;3239:9;3233:4;3229:20;3225:1;3214:9;3210:17;3203:47;3264:131;3390:4;3264:131;:::i;:::-;3256:139;;3160:245;;;:::o;3412:416::-;;3612:2;3601:9;3597:18;3589:26;;3662:9;3656:4;3652:20;3648:1;3637:9;3633:17;3626:47;3687:131;3813:4;3687:131;:::i;:::-;3679:139;;3583:245;;;:::o;3835:222::-;;3962:2;3951:9;3947:18;3939:26;;3976:71;4044:1;4033:9;4029:17;4020:6;3976:71;:::i;:::-;3933:124;;;;:::o;4064:256::-;;4126:2;4120:9;4110:19;;4164:4;4156:6;4152:17;4263:6;4251:10;4248:22;4227:18;4215:10;4212:34;4209:62;4206:2;;;4284:1;4281;4274:12;4206:2;4304:10;4300:2;4293:22;4104:216;;;;:::o;4327:339::-;;4521:18;4513:6;4510:30;4507:2;;;4553:1;4550;4543:12;4507:2;4588:4;4580:6;4576:17;4568:25;;4651:4;4645;4641:15;4633:23;;4444:222;;;:::o;4674:163::-;;4789:6;4784:3;4777:19;4826:4;4821:3;4817:14;4802:29;;4770:67;;;;:::o;4845:91::-;;4907:24;4925:5;4907:24;:::i;:::-;4896:35;;4890:46;;;:::o;4943:121::-;;5016:42;5009:5;5005:54;4994:65;;4988:76;;;:::o;5071:72::-;;5133:5;5122:16;;5116:27;;;:::o;5150:117::-;5219:24;5237:5;5219:24;:::i;:::-;5212:5;5209:35;5199:2;;5258:1;5255;5248:12;5199:2;5193:74;:::o;5274:117::-;5343:24;5361:5;5343:24;:::i;:::-;5336:5;5333:35;5323:2;;5382:1;5379;5372:12;5323:2;5317:74;:::o;166:441:2:-;;;;;;;",
  "deployedSourceMap": "166:441:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4255:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3262:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4881:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3121:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5593:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3418:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2413:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6295:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3738:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3968:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2219:81;2256:13;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;4410:4;4403:11;;4255:166;;;;:::o;3262:98::-;3315:7;3341:12;;3334:19;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;:11;:19;5092:6;5080:19;;;;;;;;;;;;;;;:33;5100:12;:10;:12::i;:::-;5080:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5049:8;:121::i;:::-;5187:4;5180:11;;4881:317;;;;;:::o;3121:81::-;3162:5;3186:9;;;;;;;;;;;3179:16;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;5729:25;;;;;;;;;;;;;;;:34;5755:7;5729:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5697:8;:83::i;:::-;5797:4;5790:11;;5593:215;;;;:::o;3418:117::-;3484:7;3510:9;:18;3520:7;3510:18;;;;;;;;;;;;;;;;3503:25;;3418:117;;;:::o;2413:85::-;2452:13;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:85;:::o;6295:266::-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;6436:25;;;;;;;;;;;;;;;:34;6462:7;6436:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6404:8;:129::i;:::-;6550:4;6543:11;;6295:266;;;;:::o;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;:::-;3899:4;3892:11;;3738:172;;;;:::o;3968:149::-;4057:7;4083:11;:18;4095:5;4083:18;;;;;;;;;;;;;;;:27;4102:7;4083:27;;;;;;;;;;;;;;;;4076:34;;3968:149;;;;:::o;874:176:5:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;590:104:3:-;643:15;677:10;670:17;;590:104;:::o;9357:340:6:-;9475:1;9458:19;;:5;:19;;;;9450:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9555:1;9536:21;;:7;:21;;;;9528:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9637:6;9607:11;:18;9619:5;9607:18;;;;;;;;;;;;;;;:27;9626:7;9607:27;;;;;;;;;;;;;;;:36;;;;9674:7;9658:32;;9667:5;9658:32;;;9683:6;9658:32;;;;;;:::i;:::-;;;;;;;;9357:340;;;:::o;7035:530::-;7158:1;7140:20;;:6;:20;;;;7132:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7241:1;7220:23;;:9;:23;;;;7212:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7352:9;:17;7362:6;7352:17;;;;;;;;;;;;;;;:91;;;;7476:32;7501:6;7476:9;:20;7486:9;7476:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;:55;;;;7540:9;7523:35;;7532:6;7523:35;;;7551:6;7523:35;;;;;;:::i;:::-;;;;;;;;7035:530;;;:::o;1746:187:5:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;10695:92:6:-;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:130::-;;222:6;209:20;200:29;;234:33;261:5;234:33;:::i;:::-;194:78;;;;:::o;279:241::-;;383:2;371:9;362:7;358:23;354:32;351:2;;;399:1;396;389:12;351:2;434:1;451:53;496:7;487:6;476:9;472:22;451:53;:::i;:::-;441:63;;413:97;345:175;;;;:::o;527:366::-;;;648:2;636:9;627:7;623:23;619:32;616:2;;;664:1;661;654:12;616:2;699:1;716:53;761:7;752:6;741:9;737:22;716:53;:::i;:::-;706:63;;678:97;806:2;824:53;869:7;860:6;849:9;845:22;824:53;:::i;:::-;814:63;;785:98;610:283;;;;;:::o;900:491::-;;;;1038:2;1026:9;1017:7;1013:23;1009:32;1006:2;;;1054:1;1051;1044:12;1006:2;1089:1;1106:53;1151:7;1142:6;1131:9;1127:22;1106:53;:::i;:::-;1096:63;;1068:97;1196:2;1214:53;1259:7;1250:6;1239:9;1235:22;1214:53;:::i;:::-;1204:63;;1175:98;1304:2;1322:53;1367:7;1358:6;1347:9;1343:22;1322:53;:::i;:::-;1312:63;;1283:98;1000:391;;;;;:::o;1398:366::-;;;1519:2;1507:9;1498:7;1494:23;1490:32;1487:2;;;1535:1;1532;1525:12;1487:2;1570:1;1587:53;1632:7;1623:6;1612:9;1608:22;1587:53;:::i;:::-;1577:63;;1549:97;1677:2;1695:53;1740:7;1731:6;1720:9;1716:22;1695:53;:::i;:::-;1685:63;;1656:98;1481:283;;;;;:::o;1771:104::-;1848:21;1863:5;1848:21;:::i;:::-;1843:3;1836:34;1830:45;;:::o;1882:347::-;;1994:39;2027:5;1994:39;:::i;:::-;2045:71;2109:6;2104:3;2045:71;:::i;:::-;2038:78;;2121:52;2166:6;2161:3;2154:4;2147:5;2143:16;2121:52;:::i;:::-;2194:29;2216:6;2194:29;:::i;:::-;2189:3;2185:39;2178:46;;1974:255;;;;;:::o;2237:372::-;;2397:67;2461:2;2456:3;2397:67;:::i;:::-;2390:74;;2497:34;2493:1;2488:3;2484:11;2477:55;2566:5;2561:2;2556:3;2552:12;2545:27;2600:2;2595:3;2591:12;2584:19;;2383:226;;;:::o;2618:371::-;;2778:67;2842:2;2837:3;2778:67;:::i;:::-;2771:74;;2878:34;2874:1;2869:3;2865:11;2858:55;2947:4;2942:2;2937:3;2933:12;2926:26;2980:2;2975:3;2971:12;2964:19;;2764:225;;;:::o;2998:327::-;;3158:67;3222:2;3217:3;3158:67;:::i;:::-;3151:74;;3258:29;3254:1;3249:3;3245:11;3238:50;3316:2;3311:3;3307:12;3300:19;;3144:181;;;:::o;3334:374::-;;3494:67;3558:2;3553:3;3494:67;:::i;:::-;3487:74;;3594:34;3590:1;3585:3;3581:11;3574:55;3663:7;3658:2;3653:3;3649:12;3642:29;3699:2;3694:3;3690:12;3683:19;;3480:228;;;:::o;3717:373::-;;3877:67;3941:2;3936:3;3877:67;:::i;:::-;3870:74;;3977:34;3973:1;3968:3;3964:11;3957:55;4046:6;4041:2;4036:3;4032:12;4025:28;4081:2;4076:3;4072:12;4065:19;;3863:227;;;:::o;4098:113::-;4181:24;4199:5;4181:24;:::i;:::-;4176:3;4169:37;4163:48;;:::o;4218:107::-;4297:22;4313:5;4297:22;:::i;:::-;4292:3;4285:35;4279:46;;:::o;4332:210::-;;4453:2;4442:9;4438:18;4430:26;;4467:65;4529:1;4518:9;4514:17;4505:6;4467:65;:::i;:::-;4424:118;;;;:::o;4549:310::-;;4696:2;4685:9;4681:18;4673:26;;4746:9;4740:4;4736:20;4732:1;4721:9;4717:17;4710:47;4771:78;4844:4;4835:6;4771:78;:::i;:::-;4763:86;;4667:192;;;;:::o;4866:416::-;;5066:2;5055:9;5051:18;5043:26;;5116:9;5110:4;5106:20;5102:1;5091:9;5087:17;5080:47;5141:131;5267:4;5141:131;:::i;:::-;5133:139;;5037:245;;;:::o;5289:416::-;;5489:2;5478:9;5474:18;5466:26;;5539:9;5533:4;5529:20;5525:1;5514:9;5510:17;5503:47;5564:131;5690:4;5564:131;:::i;:::-;5556:139;;5460:245;;;:::o;5712:416::-;;5912:2;5901:9;5897:18;5889:26;;5962:9;5956:4;5952:20;5948:1;5937:9;5933:17;5926:47;5987:131;6113:4;5987:131;:::i;:::-;5979:139;;5883:245;;;:::o;6135:416::-;;6335:2;6324:9;6320:18;6312:26;;6385:9;6379:4;6375:20;6371:1;6360:9;6356:17;6349:47;6410:131;6536:4;6410:131;:::i;:::-;6402:139;;6306:245;;;:::o;6558:416::-;;6758:2;6747:9;6743:18;6735:26;;6808:9;6802:4;6798:20;6794:1;6783:9;6779:17;6772:47;6833:131;6959:4;6833:131;:::i;:::-;6825:139;;6729:245;;;:::o;6981:222::-;;7108:2;7097:9;7093:18;7085:26;;7122:71;7190:1;7179:9;7175:17;7166:6;7122:71;:::i;:::-;7079:124;;;;:::o;7210:214::-;;7333:2;7322:9;7318:18;7310:26;;7347:67;7411:1;7400:9;7396:17;7387:6;7347:67;:::i;:::-;7304:120;;;;:::o;7431:122::-;;7525:5;7519:12;7509:22;;7490:63;;;:::o;7561:163::-;;7676:6;7671:3;7664:19;7713:4;7708:3;7704:14;7689:29;;7657:67;;;;:::o;7732:91::-;;7794:24;7812:5;7794:24;:::i;:::-;7783:35;;7777:46;;;:::o;7830:85::-;;7903:5;7896:13;7889:21;7878:32;;7872:43;;;:::o;7922:121::-;;7995:42;7988:5;7984:54;7973:65;;7967:76;;;:::o;8050:72::-;;8112:5;8101:16;;8095:27;;;:::o;8129:81::-;;8200:4;8193:5;8189:16;8178:27;;8172:38;;;:::o;8218:268::-;8283:1;8290:101;8304:6;8301:1;8298:13;8290:101;;;8380:1;8375:3;8371:11;8365:18;8361:1;8356:3;8352:11;8345:39;8326:2;8323:1;8319:10;8314:15;;8290:101;;;8406:6;8403:1;8400:13;8397:2;;;8471:1;8462:6;8457:3;8453:16;8446:27;8397:2;8267:219;;;;:::o;8494:97::-;;8582:2;8578:7;8573:2;8566:5;8562:14;8558:28;8548:38;;8542:49;;;:::o;8599:117::-;8668:24;8686:5;8668:24;:::i;:::-;8661:5;8658:35;8648:2;;8707:1;8704;8697:12;8648:2;8642:74;:::o;8723:117::-;8792:24;8810:5;8792:24;:::i;:::-;8785:5;8782:35;8772:2;;8831:1;8828;8821:12;8772:2;8766:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Token is ERC20 {\n\n    struct InitialAllocations {\n        address account;\n        uint256 amount;\n    }\n\n    constructor(InitialAllocations[] memory _initialAllocations) public ERC20(\"RFOX\",\"RFOX\"){\n        //loop through the initial allocations and mint the coins\n        for(uint256 i = 0; i<_initialAllocations.length; i++){\n            _mint(_initialAllocations[i].account,_initialAllocations[i].amount);    \n        }\n    }\n\n}\n",
  "sourcePath": "/Users/james/Development/redfox/contracts/Token.sol",
  "ast": {
    "absolutePath": "/Users/james/Development/redfox/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        924
      ]
    },
    "id": 925,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 879,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "id": 880,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:2"
      },
      {
        "absolutePath": "/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 881,
        "nodeType": "ImportDirective",
        "scope": 925,
        "sourceUnit": 1760,
        "src": "93:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 882,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1759,
              "src": "184:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1759",
                "typeString": "contract ERC20"
              }
            },
            "id": 883,
            "nodeType": "InheritanceSpecifier",
            "src": "184:5:2"
          }
        ],
        "contractDependencies": [
          947,
          1759,
          1837
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 924,
        "linearizedBaseContracts": [
          924,
          1759,
          1837,
          947
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Token.InitialAllocations",
            "id": 888,
            "members": [
              {
                "constant": false,
                "id": 885,
                "mutability": "mutable",
                "name": "account",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 888,
                "src": "233:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 884,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 887,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 888,
                "src": "258:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 886,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "258:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "InitialAllocations",
            "nodeType": "StructDefinition",
            "scope": 924,
            "src": "197:82:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "373:231:2",
              "statements": [
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "502:96:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 910,
                                  "name": "_initialAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "522:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Token.InitialAllocations memory[] memory"
                                  }
                                },
                                "id": 912,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 911,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "542:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "522:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitialAllocations_$888_memory_ptr",
                                  "typeString": "struct Token.InitialAllocations memory"
                                }
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "account",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 885,
                              "src": "522:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 914,
                                  "name": "_initialAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "553:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Token.InitialAllocations memory[] memory"
                                  }
                                },
                                "id": 916,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 915,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "573:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "553:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitialAllocations_$888_memory_ptr",
                                  "typeString": "struct Token.InitialAllocations memory"
                                }
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 887,
                              "src": "553:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 909,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1635,
                            "src": "516:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "516:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "516:67:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "468:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_initialAllocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "470:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Token.InitialAllocations memory[] memory"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "470:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "468:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 921,
                  "initializationExpression": {
                    "assignments": [
                      899
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 921,
                        "src": "453:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "453:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 901,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "465:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "453:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "498:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 906,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "498:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 908,
                    "nodeType": "ExpressionStatement",
                    "src": "498:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "449:149:2"
                }
              ]
            },
            "documentation": null,
            "id": 923,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "52464f58",
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "359:6:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2fd2b40090d2eb5fc0c4c0981a801acb2f8de3960ad85ee431f71a66da649767",
                      "typeString": "literal_string \"RFOX\""
                    },
                    "value": "RFOX"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "52464f58",
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "366:6:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2fd2b40090d2eb5fc0c4c0981a801acb2f8de3960ad85ee431f71a66da649767",
                      "typeString": "literal_string \"RFOX\""
                    },
                    "value": "RFOX"
                  }
                ],
                "id": 896,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1759,
                  "src": "353:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1759_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "353:20:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "_initialAllocations",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 923,
                  "src": "297:47:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Token.InitialAllocations[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 889,
                      "name": "InitialAllocations",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 888,
                      "src": "297:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InitialAllocations_$888_storage_ptr",
                        "typeString": "struct Token.InitialAllocations"
                      }
                    },
                    "id": 890,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "297:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_storage_$dyn_storage_ptr",
                      "typeString": "struct Token.InitialAllocations[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:49:2"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:0:2"
            },
            "scope": 924,
            "src": "285:319:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 925,
        "src": "166:441:2"
      }
    ],
    "src": "33:575:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/Development/redfox/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        924
      ]
    },
    "id": 925,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 879,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "id": 880,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:2"
      },
      {
        "absolutePath": "/Users/james/Development/redfox/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 881,
        "nodeType": "ImportDirective",
        "scope": 925,
        "sourceUnit": 1760,
        "src": "93:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 882,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1759,
              "src": "184:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1759",
                "typeString": "contract ERC20"
              }
            },
            "id": 883,
            "nodeType": "InheritanceSpecifier",
            "src": "184:5:2"
          }
        ],
        "contractDependencies": [
          947,
          1759,
          1837
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 924,
        "linearizedBaseContracts": [
          924,
          1759,
          1837,
          947
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Token.InitialAllocations",
            "id": 888,
            "members": [
              {
                "constant": false,
                "id": 885,
                "mutability": "mutable",
                "name": "account",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 888,
                "src": "233:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 884,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 887,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 888,
                "src": "258:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 886,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "258:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "InitialAllocations",
            "nodeType": "StructDefinition",
            "scope": 924,
            "src": "197:82:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "373:231:2",
              "statements": [
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "502:96:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 910,
                                  "name": "_initialAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "522:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Token.InitialAllocations memory[] memory"
                                  }
                                },
                                "id": 912,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 911,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "542:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "522:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitialAllocations_$888_memory_ptr",
                                  "typeString": "struct Token.InitialAllocations memory"
                                }
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "account",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 885,
                              "src": "522:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 914,
                                  "name": "_initialAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "553:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Token.InitialAllocations memory[] memory"
                                  }
                                },
                                "id": 916,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 915,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "573:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "553:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitialAllocations_$888_memory_ptr",
                                  "typeString": "struct Token.InitialAllocations memory"
                                }
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 887,
                              "src": "553:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 909,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1635,
                            "src": "516:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "516:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "516:67:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "468:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_initialAllocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "470:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Token.InitialAllocations memory[] memory"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "470:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "468:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 921,
                  "initializationExpression": {
                    "assignments": [
                      899
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 921,
                        "src": "453:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "453:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 901,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "465:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "453:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "498:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 906,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "498:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 908,
                    "nodeType": "ExpressionStatement",
                    "src": "498:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "449:149:2"
                }
              ]
            },
            "documentation": null,
            "id": 923,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "52464f58",
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "359:6:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2fd2b40090d2eb5fc0c4c0981a801acb2f8de3960ad85ee431f71a66da649767",
                      "typeString": "literal_string \"RFOX\""
                    },
                    "value": "RFOX"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "52464f58",
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "366:6:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2fd2b40090d2eb5fc0c4c0981a801acb2f8de3960ad85ee431f71a66da649767",
                      "typeString": "literal_string \"RFOX\""
                    },
                    "value": "RFOX"
                  }
                ],
                "id": 896,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1759,
                  "src": "353:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1759_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "353:20:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "_initialAllocations",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 923,
                  "src": "297:47:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Token.InitialAllocations[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 889,
                      "name": "InitialAllocations",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 888,
                      "src": "297:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InitialAllocations_$888_storage_ptr",
                        "typeString": "struct Token.InitialAllocations"
                      }
                    },
                    "id": 890,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "297:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_InitialAllocations_$888_storage_$dyn_storage_ptr",
                      "typeString": "struct Token.InitialAllocations[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:49:2"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:0:2"
            },
            "scope": 924,
            "src": "285:319:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 925,
        "src": "166:441:2"
      }
    ],
    "src": "33:575:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe04437Fd8D156Ed41233c6D61C54DfaA4C2F1808",
      "transactionHash": "0x52f791dc077d7343b20fdef412da9948c6a59ee6b88f737fee34eb361e022efe"
    }
  },
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-10-15T17:46:17.117Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}