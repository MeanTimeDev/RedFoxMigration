{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RedFoxMigrated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkTokenBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "getAccountReference",
				"outputs": [
					{
						"internalType": "bytes20",
						"name": "",
						"type": "bytes20"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ethAddress",
						"type": "address"
					}
				],
				"name": "getEthAccountAvailable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ethAddress",
						"type": "address"
					}
				],
				"name": "getEthAccountBalances",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "getEthereumAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "account",
						"type": "bytes20"
					}
				],
				"name": "getRAccountAvailable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "rAddress",
						"type": "bytes20"
					}
				],
				"name": "getRAccountBalances",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ethAddress",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setEthAccountBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "account",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "blockHeight",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "paid",
										"type": "bool"
									}
								],
								"internalType": "struct RedFoxMigration.TimedBalance[]",
								"name": "balances",
								"type": "tuple[]"
							}
						],
						"internalType": "struct RedFoxMigration.SetEthBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setEthAccountBalances",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "account",
						"type": "bytes20"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockHeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "paid",
								"type": "bool"
							}
						],
						"internalType": "struct RedFoxMigration.TimedBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setRAccountBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes20",
								"name": "account",
								"type": "bytes20"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "blockHeight",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "paid",
										"type": "bool"
									}
								],
								"internalType": "struct RedFoxMigration.TimedBalance[]",
								"name": "balances",
								"type": "tuple[]"
							}
						],
						"internalType": "struct RedFoxMigration.SetRBalance[]",
						"name": "balances",
						"type": "tuple[]"
					}
				],
				"name": "setRAccountBalances",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					}
				],
				"name": "setTokenContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "publicKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "publicKeyY",
						"type": "bytes32"
					}
				],
				"name": "withdrawBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/RedFoxMigration.sol": "RedFoxMigration"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/RedFoxMigration.sol": {
			"keccak256": "0x05e63e37cd8c79487a5ac93fff95f440e529d50968986022a78f5f2ad63e6e5f",
			"urls": [
				"bzz-raw://f5a63b7504dd1b5c823467abe338441ed743b5d8ff54f0d12a2fafd7aa49c444",
				"dweb:/ipfs/QmQk9biFg7umEZVsEoneiSdDQYcx5fsasgyrE3nVRfNNyo"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/GSN/Context.sol": {
			"keccak256": "0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183",
			"urls": [
				"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a",
				"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc",
			"urls": [
				"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3",
				"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806",
			"urls": [
				"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5",
				"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0",
			"urls": [
				"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02",
				"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385",
			"urls": [
				"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017",
				"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"
			]
		},
		"localhost/node_modules/@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390",
			"urls": [
				"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37",
				"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA"
			]
		}
	},
	"version": 1
}